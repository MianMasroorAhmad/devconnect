# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy to EC2 (manual)

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to build and push (e.g. ghcr.io/owner/repo:sha)'
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU and Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ github.event.inputs.image_tag }}

  terraform-apply:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image variable for Terraform
        run: |
          echo "TF_VAR_image=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.9'

      - name: Terraform init
        working-directory: infra/terraform
        run: terraform init

      - name: Terraform apply
        working-directory: infra/terraform
        run: terraform apply -auto-approve -var="key_name=${{ secrets.EC2_KEY_NAME }}"

      - name: Output ALB DNS
        working-directory: infra/terraform
        run: terraform output -raw alb_dns_name
name: Deploy to EC2 (manual)

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to build and push (e.g. ghcr.io/owner/repo:sha)'
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU and Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ github.event.inputs.image_tag }}

  terraform-apply:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image variable for Terraform
        run: |
          echo "TF_VAR_image=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.9'

      - name: Terraform init
        working-directory: infra/terraform
        run: terraform init

      - name: Terraform apply
        working-directory: infra/terraform
        run: terraform apply -auto-approve -var="key_name=${{ secrets.EC2_KEY_NAME }}"

      - name: Output ALB DNS
        working-directory: infra/terraform
        run: terraform output -raw alb_dns_name
